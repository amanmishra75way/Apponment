{
  "openapi": "3.0.0",
  "info": {
    "title": "Appointment Management API",
    "version": "1.0.0",
    "description": "API for managing appointments, users, and holidays"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Users",
      "description": "User management"
    },
    {
      "name": "Appointments",
      "description": "Appointment management"
    },
    {
      "name": "Holidays",
      "description": "Holiday management"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "role": { "type": "string", "enum": ["ADMIN", "STAFF", "USER"] }
                      }
                    },
                    "accessToken": { "type": "string" },
                    "refreshToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error or user already exists)"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "role": { "type": "string", "enum": ["ADMIN", "STAFF", "USER"] }
                      }
                    },
                    "accessToken": { "type": "string" },
                    "refreshToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout a user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          },
          "400": {
            "description": "No refresh token provided"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IUser"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user profile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IUser"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated"
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request password reset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email sent"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" },
                  "newPassword": { "type": "string", "minLength": 6 }
                },
                "required": ["token", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid or expired reset token"
          }
        }
      }
    },
    "/users/change-password": {
      "post": {
        "tags": ["Users"],
        "summary": "Change password",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": { "type": "string" },
                  "newPassword": { "type": "string", "minLength": 6 }
                },
                "required": ["currentPassword", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Current password is incorrect"
          },
          "401": {
            "description": "User not authenticated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": { "type": "string" }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": { "type": "string" },
                    "refreshToken": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token"
          },
          "403": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/appointments": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Create a new appointment",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Appointment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error)"
          }
        }
      }
    },
    "/appointments/user/{userId}": {
      "get": {
        "tags": ["Appointments"],
        "summary": "Get appointments by user ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appointments/staff/{staffId}": {
      "get": {
        "tags": ["Appointments"],
        "summary": "Get appointments by staff ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of staff appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{id}/reschedule": {
      "put": {
        "tags": ["Appointments"],
        "summary": "Reschedule an appointment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RescheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment rescheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error)"
          }
        }
      }
    },
    "/appointments/{id}": {
      "put": {
        "tags": ["Appointments"],
        "summary": "Cancel an appointment",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{id}/send-reminder": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Send appointment reminder",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder email sent"
          },
          "404": {
            "description": "Appointment or user not found"
          }
        }
      }
    },
    "/appointments/admin": {
      "get": {
        "tags": ["Appointments"],
        "summary": "Get all appointments (admin only)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of all appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/appointments/{id}/complete": {
      "put": {
        "tags": ["Appointments"],
        "summary": "Mark appointment as complete",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment marked as completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "500": {
            "description": "Failed to mark appointment as completed"
          }
        }
      }
    },
    "/holidays": {
      "post": {
        "tags": ["Holidays"],
        "summary": "Add a new holiday",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Holiday added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Holiday"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error or date already marked as holiday)"
          }
        }
      },
      "get": {
        "tags": ["Holidays"],
        "summary": "Get all holidays",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of holidays",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Holiday"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/holidays/{date}": {
      "delete": {
        "tags": ["Holidays"],
        "summary": "Delete a holiday (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Holiday removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "date": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Holiday not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 },
          "role": { "type": "string", "enum": ["ADMIN", "STAFF", "USER"] }
        },
        "required": ["name", "email", "password"]
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 }
        },
        "required": ["email", "password"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 },
          "role": { "type": "string", "enum": ["ADMIN", "STAFF", "USER"] },
          "active": { "type": "boolean" }
        }
      },
      "IUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "role": { "type": "string", "enum": ["ADMIN", "STAFF", "USER"] },
          "active": { "type": "boolean" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "AppointmentDTO": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "staffId": { "type": "string" },
          "serviceType": { "type": "string" },
          "date": { "type": "string" },
          "timeSlot": { "type": "string" },
          "notes": { "type": "string" }
        },
        "required": ["userId", "serviceType", "date", "timeSlot"]
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "staffId": { "type": "string" },
          "serviceType": { "type": "string" },
          "date": { "type": "string" },
          "timeSlot": { "type": "string" },
          "status": { "type": "string", "enum": ["booked", "completed", "cancelled", "rescheduled"] },
          "notes": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "RescheduleDto": {
        "type": "object",
        "properties": {
          "date": { "type": "string" },
          "timeSlot": { "type": "string" }
        },
        "required": ["date", "timeSlot"]
      },
      "HolidayDto": {
        "type": "object",
        "properties": {
          "date": { "type": "string" },
          "reason": { "type": "string" }
        },
        "required": ["date", "reason"]
      },
      "Holiday": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "date": { "type": "string" },
          "reason": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
}
